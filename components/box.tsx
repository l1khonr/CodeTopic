import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"
import { cn } from "../lib/utils"

const boxVariants = cva("", {
  variants: {
    display: {
      none: "hidden",
      block: "block",
      "inline-block": "inline-block",
      "inline": "inline",
      flex: "flex",
      "inline-flex": "inline-flex",
      grid: "grid",
      "inline-grid": "inline-grid",
    },
    position: {
      static: "static",
      relative: "relative",
      absolute: "absolute",
      fixed: "fixed",
      sticky: "sticky",
    },
    p: {
      "0": "p-0",
      "1": "p-1",
      "2": "p-2",
      "3": "p-3",
      "4": "p-4",
      "5": "p-5",
      "6": "p-6",
      "7": "p-7",
      "8": "p-8",
      "9": "p-9",
      "10": "p-10",
      "11": "p-11",
      "12": "p-12",
    },
    px: {
      "0": "px-0",
      "1": "px-1",
      "2": "px-2",
      "3": "px-3",
      "4": "px-4",
      "5": "px-5",
      "6": "px-6",
      "7": "px-7",
      "8": "px-8",
      "9": "px-9",
      "10": "px-10",
      "11": "px-11",
      "12": "px-12",
    },
    py: {
      "0": "py-0",
      "1": "py-1",
      "2": "py-2",
      "3": "py-3",
      "4": "py-4",
      "5": "py-5",
      "6": "py-6",
      "7": "py-7",
      "8": "py-8",
      "9": "py-9",
      "10": "py-10",
      "11": "py-11",
      "12": "py-12",
    },
    pt: {
      "0": "pt-0",
      "1": "pt-1",
      "2": "pt-2",
      "3": "pt-3",
      "4": "pt-4",
      "5": "pt-5",
      "6": "pt-6",
      "7": "pt-7",
      "8": "pt-8",
      "9": "pt-9",
      "10": "pt-10",
      "11": "pt-11",
      "12": "pt-12",
    },
    pr: {
      "0": "pr-0",
      "1": "pr-1",
      "2": "pr-2",
      "3": "pr-3",
      "4": "pr-4",
      "5": "pr-5",
      "6": "pr-6",
      "7": "pr-7",
      "8": "pr-8",
      "9": "pr-9",
      "10": "pr-10",
      "11": "pr-11",
      "12": "pr-12",
    },
    pb: {
      "0": "pb-0",
      "1": "pb-1",
      "2": "pb-2",
      "3": "pb-3",
      "4": "pb-4",
      "5": "pb-5",
      "6": "pb-6",
      "7": "pb-7",
      "8": "pb-8",
      "9": "pb-9",
      "10": "pb-10",
      "11": "pb-11",
      "12": "pb-12",
    },
    pl: {
      "0": "pl-0",
      "1": "pl-1",
      "2": "pl-2",
      "3": "pl-3",
      "4": "pl-4",
      "5": "pl-5",
      "6": "pl-6",
      "7": "pl-7",
      "8": "pl-8",
      "9": "pl-8",
      "10": "pl-10",
      "11": "pl-11",
      "12": "pl-12",
    },
    width: {
      auto: "w-auto",
      full: "w-full",
      screen: "w-screen",
      "1/2": "w-1/2",
      "1/3": "w-1/3",
      "2/3": "w-2/3",
      "1/4": "w-1/4",
      "2/4": "w-2/4",
      "3/4": "w-3/4",
      "1/5": "w-1/5",
      "1/6": "w-1/6",
      "1/12": "w-1/12",
    },
    minWidth: {
      "0": "min-w-0",
      full: "min-w-full",
    },
    maxWidth: {
      none: "max-w-none",
      full: "max-w-full",
      screen: "max-w-screen",
    },
    height: {
      auto: "h-auto",
      full: "h-full",
      screen: "h-screen",
      "1/2": "h-1/2",
      "1/3": "h-1/3",
      "2/3": "h-2/3",
      "1/4": "h-1/4",
      "1/5": "h-1/5",
      "1/6": "h-1/6",
    },
    minHeight: {
      "0": "min-h-0",
      full: "min-h-full",
      screen: "min-h-screen",
    },
    maxHeight: {
      none: "max-h-none",
      full: "max-h-full",
      screen: "max-h-screen",
    },
    flexBasis: {
      auto: "basis-auto",
      "1/2": "basis-1/2",
      "1/3": "basis-1/3",
      "2/3": "basis-2/3",
      "1/4": "basis-1/4",
      "1/5": "basis-1/5",
      "1/6": "basis-1/6",
    },
    flexShrink: {
      "0": "shrink-0",
      "1": "shrink",
    },
    flexGrow: {
      "0": "grow-0",
      "1": "grow",
    },
    gridArea: {
      auto: "col-auto",
    },
    gridColumn: {
      auto: "col-auto",
      "span-1": "col-span-1",
      "span-2": "col-span-2",
      "span-3": "col-span-3",
      "span-4": "col-span-4",
      "span-5": "col-span-5",
      "span-6": "col-span-6",
      "span-7": "col-span-7",
      "span-8": "col-span-8",
      "span-9": "col-span-9",
      "span-10": "col-span-10",
      "span-11": "col-span-11",
      "span-12": "col-span-12",
    },
    gridColumnStart: {
      "1": "col-start-1",
      "2": "col-start-2",
      "3": "col-start-3",
      "4": "col-start-4",
      "5": "col-start-5",
      "6": "col-start-6",
      "7": "col-start-7",
      "8": "col-start-8",
      "9": "col-start-9",
      "10": "col-start-10",
      "11": "col-start-11",
      "12": "col-start-12",
    },
    gridColumnEnd: {
      "1": "col-end-1",
      "2": "col-end-2",
      "3": "col-end-3",
      "4": "col-end-4",
      "5": "col-end-5",
      "6": "col-end-6",
      "7": "col-end-7",
      "8": "col-end-8",
      "9": "col-end-9",
      "10": "col-end-10",
      "11": "col-end-11",
      "12": "col-end-12",
    },
    gridRow: {
      auto: "row-auto",
      "span-1": "row-span-1",
      "span-2": "row-span-2",
      "span-3": "row-span-3",
      "span-4": "row-span-4",
      "span-5": "row-span-5",
      "span-6": "row-span-6",
    },
    gridRowStart: {
      "1": "row-start-1",
      "2": "row-start-2",
      "3": "row-start-3",
      "4": "row-start-4",
      "5": "row-start-5",
      "6": "row-start-6",
    },
    gridRowEnd: {
      "1": "row-end-1",
      "2": "row-end-2",
      "3": "row-end-3",
      "4": "row-end-4",
      "5": "row-end-5",
      "6": "row-end-6",
    },
    overflow: {
      auto: "overflow-auto",
      hidden: "overflow-hidden",
      visible: "overflow-visible",
      scroll: "overflow-scroll",
    },
    overflowX: {
      auto: "overflow-x-auto",
      hidden: "overflow-x-hidden",
      visible: "overflow-x-visible",
      scroll: "overflow-x-scroll",
    },
    overflowY: {
      auto: "overflow-y-auto",
      hidden: "overflow-y-hidden",
      visible: "overflow-y-visible",
      scroll: "overflow-y-scroll",
    },
  },
})

export interface BoxProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof boxVariants> {
  asChild?: boolean
}

const Box = React.forwardRef<HTMLDivElement, BoxProps>(
  ({
    className,
    display,
    position,
    p,
    px,
    py,
    pt,
    pr,
    pb,
    pl,
    width,
    minWidth,
    maxWidth,
    height,
    minHeight,
    maxHeight,
    flexBasis,
    flexShrink,
    flexGrow,
    gridArea,
    gridColumn,
    gridColumnStart,
    gridColumnEnd,
    gridRow,
    gridRowStart,
    gridRowEnd,
    overflow,
    overflowX,
    overflowY,
    asChild = false,
    ...props
  }, ref) => {
    const Comp = asChild ? Slot : "div"
    return (
      <Comp
        className={cn(
          boxVariants({
            display,
            position,
            p,
            px,
            py,
            pt,
            pr,
            pb,
            pl,
            width,
            minWidth,
            maxWidth,
            height,
            minHeight,
            maxHeight,
            flexBasis,
            flexShrink,
            flexGrow,
            gridArea,
            gridColumn,
            gridColumnStart,
            gridColumnEnd,
            gridRow,
            gridRowStart,
            gridRowEnd,
            overflow,
            overflowX,
            overflowY,
            className,
          })
        )}
        ref={ref}
        {...props}
      />
    )
  }
)
Box.displayName = "Box"

export { Box, boxVariants }